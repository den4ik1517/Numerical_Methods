def f(x):
  return x**2 + x - 3

def df(x):
  return 2 * x + 1

def chord(x0, x1, tol=1e-5, max_iter=1000):
  for i in range(max_iter):
    # Знаходимо точку перетину хорди з віссю x.
    x2 = (x0 * f(x1) - x1 * f(x0)) / (f(x1) - f(x0))
    # Якщо відстань між точками x0 і x2 є меншою за задане значення точності, то зупиняємо ітерації.
    if abs(x2 - x0) < tol:
      return x2
    # Якщо значення f(x2) не змінилося в порівнянні з f(x1), то функція не має коренів в даному інтервалі.
    if f(x2) == f(x1):
      raise ValueError("Не знайдено кореня в даному інтервалі")
    # Приймаємо x2 як нову точку x0 і повторюємо ітерації.
    x0, x1 = x1, x2
  raise ValueError("Не знайдено кореня з заданою точністю")

# Знаходимо ділянку локалізації коренів.
x0 = -2
x1 = 3
while f(x0) * f(x1) > 0:
  x0 -= 1
  x1 += 1

# Знаходимо корінь функції методом хорди.
x = chord(x0, x1)

print(x)
